{"version":3,"sources":["../../src/utils/utils.ts"],"names":["getDisplayDateFormat","date","timeZone","toLowerCase","toISOString","toLocaleString","timeZoneName","getTimeDuration","ISODuration","addTimeDuration","duration","utc","parsedDuration","get","set","years","months","weeks","days","hours","minutes","seconds","subtractTimeDuration","subDuration","Object","entries","reduce","acc","key","val","parseAndExplodeTimeRange","timeRange","overwritePeriod","tr","split","startTime","Date","parse","endTime","period","length","undefined","explodeTimeRange","validTimeRange","result","currentTime","getTime","minHour","minMinutes","maxHour","maxMinutes","validTimeRangeArray","getUTCHours","getUTCMinutes","push","parseTimeInterval","timeInterval","parts","isNaN","parseTimesExpression","times","String","timeRanges","timeValue","i","l","concat","sort","a","b","intersect_arrays","arrayA","arrayB","slice","shift","union_arrays","sort_and_deduplicate","arr","last"],"mappings":"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","sourcesContent":["import {\n  AvailableTimes,\n  DurationType,\n  Period,\n  TimeZone,\n  UTCType,\n} from \"../types/common\";\nimport { parse, Duration } from \"iso8601-duration\";\n\nexport function getDisplayDateFormat(date: Date, timeZone: TimeZone) {\n  //   var timeZone = this._getCurrentTimeZone();\n  if (timeZone.toLowerCase() == \"utc\") {\n    return date.toISOString();\n  }\n  if (timeZone.toLowerCase() == \"local\") {\n    return date.toLocaleString();\n  }\n  return date.toLocaleString([], {\n    timeZone: timeZone,\n    timeZoneName: \"short\",\n  });\n}\n\n\nexport function getTimeDuration(ISODuration: string) {\n  return parse(ISODuration);\n}\n\nexport function addTimeDuration(\n  date: any,\n  duration: DurationType | Duration,\n  utc?: UTCType\n) {\n  if (typeof utc === \"undefined\") {\n    utc = true;\n  }\n  let parsedDuration: Duration | undefined;\n  if (typeof duration == \"string\") {\n    parsedDuration = getTimeDuration(duration);\n  } else {\n    parsedDuration = duration;\n  }\n  // var l = duration.length;\n  var get = utc ? \"getUTC\" : \"get\";\n  var set = utc ? \"setUTC\" : \"set\";\n\n  if (parsedDuration?.years) {\n    date[set + \"FullYear\"](date[get + \"FullYear\"]() + parsedDuration.years);\n  }\n  if (parsedDuration?.months) {\n    date[set + \"Month\"](date[get + \"Month\"]() + parsedDuration.months);\n  }\n  if (parsedDuration?.weeks) {\n    // weeks\n    date[set + \"Date\"](date[get + \"Date\"]() + parsedDuration.weeks * 7);\n  }\n  if (parsedDuration?.days) {\n    date[set + \"Date\"](date[get + \"Date\"]() + parsedDuration?.days);\n  }\n  if (parsedDuration?.hours) {\n    date[set + \"Hours\"](date[get + \"Hours\"]() + parsedDuration?.hours);\n  }\n  if (parsedDuration?.minutes) {\n    date[set + \"Minutes\"](date[get + \"Minutes\"]() + parsedDuration?.minutes);\n  }\n  if (parsedDuration?.seconds) {\n    date[set + \"Seconds\"](date[get + \"Seconds\"]() + parsedDuration?.seconds);\n  }\n}\n\nexport function subtractTimeDuration(\n  date: any,\n  duration: Duration | DurationType,\n  utc: UTCType\n) {\n  let parsedDuration: Duration | undefined;\n\n  if (typeof duration == \"string\") {\n    parsedDuration = getTimeDuration(duration);\n  } else {\n    parsedDuration = duration;\n  }\n\n  if (typeof duration == \"string\") {\n  }\n  const subDuration = Object.entries(parsedDuration).reduce(\n    (acc, [key, val]) => ({ ...acc, [key]: -val }),\n    {} as Duration\n  );\n\n  // for (var i = 0, l = Object.keys(duration.length; i < l; i++) {\n  //   subDuration.push(-duration[i]);\n  // }\n  addTimeDuration(date, subDuration, utc);\n}\n\nexport function parseAndExplodeTimeRange(\n  timeRange: string,\n  overwritePeriod: Period\n) {\n  var tr = timeRange.split(\"/\");\n  var startTime = new Date(Date.parse(tr[0]));\n  var endTime = new Date(Date.parse(tr[1]));\n  var period = tr.length > 2 && tr[2].length ? tr[2] : \"P1D\";\n  if (overwritePeriod !== undefined && overwritePeriod !== null) {\n    period = overwritePeriod;\n  }\n  return explodeTimeRange(startTime, endTime, period);\n}\n\nexport function explodeTimeRange(\n  startTime: Date,\n  endTime: Date,\n  ISODuration: Period,\n  validTimeRange?: string\n) {\n  var duration = getTimeDuration(ISODuration);\n  var result = [];\n  var currentTime = new Date(startTime.getTime());\n  var minHour = -1,\n    minMinutes = -1,\n    maxHour = -1,\n    maxMinutes = -1;\n  if (validTimeRange !== undefined) {\n    var validTimeRangeArray = validTimeRange.split(\"/\");\n    minHour = +validTimeRangeArray[0].split(\":\")[0];\n    minMinutes = +validTimeRangeArray[0].split(\":\")[1];\n    maxHour = +validTimeRangeArray[1].split(\":\")[0];\n    maxMinutes = +validTimeRangeArray[1].split(\":\")[1];\n  }\n  while (currentTime < endTime) {\n    if (\n      validTimeRange === undefined ||\n      (currentTime.getUTCHours() >= minHour &&\n        currentTime.getUTCHours() <= maxHour)\n    ) {\n      if (\n        (currentTime.getUTCHours() != minHour ||\n          currentTime.getUTCMinutes() >= minMinutes) &&\n        (currentTime.getUTCHours() != maxHour ||\n          currentTime.getUTCMinutes() <= maxMinutes)\n      ) {\n        result.push(currentTime.getTime());\n      }\n    }\n    addTimeDuration(currentTime, duration);\n  }\n  if (currentTime >= endTime) {\n    result.push(endTime.getTime());\n  }\n  return result;\n}\n\nexport function parseTimeInterval(timeInterval: string) {\n  var parts = timeInterval.split(\"/\");\n  if (parts.length != 2) {\n    throw \"Incorrect ISO9601 TimeInterval: \" + timeInterval;\n  }\n  var startTime: Date | number = Date.parse(parts[0]);\n  var endTime = null;\n  var duration = null;\n  if (isNaN(startTime)) {\n    // -> format duration/endTime\n    duration = getTimeDuration(parts[0]);\n    endTime = Date.parse(parts[1]);\n    startTime = new Date(endTime);\n    subtractTimeDuration(startTime, duration, true);\n    endTime = new Date(endTime);\n  } else {\n    endTime = Date.parse(parts[1]);\n    if (isNaN(endTime)) {\n      // -> format startTime/duration\n      duration = getTimeDuration(parts[1]);\n      endTime = new Date(startTime);\n      addTimeDuration(endTime, duration, true);\n    } else {\n      // -> format startTime/endTime\n      endTime = new Date(endTime);\n    }\n    startTime = new Date(startTime);\n  }\n  return [startTime, endTime];\n}\n\nexport function parseTimesExpression(\n  times: AvailableTimes | undefined,\n  overwritePeriod: Period\n) {\n  var result: AvailableTimes = [];\n  if (!times) {\n    return result;\n  }\n  if (typeof times == \"string\" || times instanceof String) {\n    var timeRanges = times.split(\",\");\n    var timeRange;\n    var timeValue;\n    for (var i = 0, l = timeRanges.length; i < l; i++) {\n      timeRange = timeRanges[i];\n      if (timeRange.split(\"/\").length == 3) {\n        result = result.concat(\n          parseAndExplodeTimeRange(timeRange, overwritePeriod)\n        );\n      } else {\n        timeValue = Date.parse(timeRange);\n        if (!isNaN(timeValue)) {\n          result.push(timeValue);\n        }\n      }\n    }\n  } else {\n    result = times;\n  }\n  return result.sort(function (a, b) {\n    return a - b;\n  });\n}\n\nexport function intersect_arrays(\n  arrayA: AvailableTimes,\n  arrayB: AvailableTimes\n): AvailableTimes {\n  var a = arrayA.slice(0);\n  var b = arrayB.slice(0);\n  var result: AvailableTimes = [];\n  while (a.length > 0 && b.length > 0) {\n    if (a[0] < b[0]) {\n      a.shift();\n    } else if (a[0] > b[0]) {\n      b.shift();\n    } /* they're equal */ else {\n      result.push(a.shift() as number);\n      b.shift();\n    }\n  }\n  return result;\n}\n\nexport function union_arrays(\n  arrayA: AvailableTimes,\n  arrayB: AvailableTimes\n): AvailableTimes {\n  var a = arrayA.slice(0);\n  var b = arrayB.slice(0);\n  var result: AvailableTimes = [];\n  while (a.length > 0 && b.length > 0) {\n    if (a[0] < b[0]) {\n      result.push(a.shift() as number);\n    } else if (a[0] > b[0]) {\n      result.push(b.shift() as number);\n    } /* they're equal */ else {\n      result.push(a.shift() as number);\n      b.shift();\n    }\n  }\n  if (a.length > 0) {\n    result = result.concat(a);\n  } else if (b.length > 0) {\n    result = result.concat(b);\n  }\n  return result;\n}\n\nexport function sort_and_deduplicate(arr: AvailableTimes) {\n  arr = arr.slice(0).sort(function (a, b) {\n    return a - b;\n  });\n  var result = [];\n  var last = null;\n  for (var i = 0, l = arr.length; i < l; i++) {\n    if (arr[i] !== last) {\n      result.push(arr[i]);\n      last = arr[i];\n    }\n  }\n  return result;\n}\n"],"file":"utils.js"}