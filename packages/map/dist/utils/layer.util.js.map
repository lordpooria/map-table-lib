{"version":3,"sources":["../../src/utils/layer.util.ts"],"names":["_getFeatureTimes","feature","featureTimes","properties","hasOwnProperty","coordTimes","times","linestringTimestamps","time","i","l","length","Date","parse","trim","_getFeatureBetweenDates","minTime","maxTime","index_min","index_max","new_coordinates","geometry","geometries","coordinates","slice","type"],"mappings":";;;;;;;;AAEO,SAASA,gBAAT,CAA0BC,OAA1B,EAAuD;AAC5D,MAAI,CAACA,OAAO,CAACC,YAAb,EAA2B;AACzB,QAAI,CAACD,OAAO,CAACE,UAAb,EAAyB;AACvBF,MAAAA,OAAO,CAACC,YAAR,GAAuB,EAAvB;AACD,KAFD,MAEO,IAAID,OAAO,CAACE,UAAR,CAAmBC,cAAnB,CAAkC,YAAlC,CAAJ,EAAqD;AAC1DH,MAAAA,OAAO,CAACC,YAAR,GAAuBD,OAAO,CAACE,UAAR,CAAmBE,UAA1C;AACD,KAFM,MAEA,IAAIJ,OAAO,CAACE,UAAR,CAAmBC,cAAnB,CAAkC,OAAlC,CAAJ,EAAgD;AACrDH,MAAAA,OAAO,CAACC,YAAR,GAAuBD,OAAO,CAACE,UAAR,CAAmBG,KAA1C;AACD,KAFM,MAEA,IAAIL,OAAO,CAACE,UAAR,CAAmBC,cAAnB,CAAkC,sBAAlC,CAAJ,EAA+D;AACpEH,MAAAA,OAAO,CAACC,YAAR,GAAuBD,OAAO,CAACE,UAAR,CAAmBI,oBAA1C;AACD,KAFM,MAEA,IAAIN,OAAO,CAACE,UAAR,CAAmBC,cAAnB,CAAkC,MAAlC,CAAJ,EAA+C;AACpDH,MAAAA,OAAO,CAACC,YAAR,GAAuB,CAACD,OAAO,CAACE,UAAR,CAAmBK,IAApB,CAAvB;AACD,KAFM,MAEA;AACLP,MAAAA,OAAO,CAACC,YAAR,GAAuB,EAAvB;AACD;;AACD,QAAI,CAACD,OAAO,CAACC,YAAb,EAA2B,OAAO,EAAP;;AAE3B,SAAK,IAAIO,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGT,OAAO,CAACC,YAAR,CAAqBS,MAAzC,EAAiDF,CAAC,GAAGC,CAArD,EAAwDD,CAAC,EAAzD,EAA6D;AAC3D,UAAID,IAAI,GAAGP,OAAO,CAACC,YAAR,CAAqBO,CAArB,CAAX;;AACA,UAAI,OAAOD,IAAP,KAAgB,QAApB,EAA8B;AAC5BA,QAAAA,IAAI,GAAGI,IAAI,CAACC,KAAL,CAAWL,IAAI,CAACM,IAAL,EAAX,CAAP;AACAb,QAAAA,OAAO,CAACC,YAAR,CAAqBO,CAArB,IAA0BD,IAA1B;AACD;AACF;AACF;;AACD,SAAOP,OAAO,CAACC,YAAf;AACD;;AAEM,SAASa,uBAAT,CACLd,OADK,EAELe,OAFK,EAGLC,OAHK,EAIL;AACA,MAAIf,YAAY,GAAGF,gBAAgB,CAACC,OAAD,CAAnC;;AACA,MAAIC,YAAY,CAACS,MAAb,IAAuB,CAA3B,EAA8B;AAC5B,WAAOV,OAAP;AACD;;AAED,MAAIiB,SAAS,GAAG,IAAhB;AAAA,MACEC,SAAS,GAAG,IADd;AAAA,MAEET,CAAC,GAAGR,YAAY,CAACS,MAFnB;;AAIA,MAAIT,YAAY,CAAC,CAAD,CAAZ,GAAkBe,OAAlB,IAA6Bf,YAAY,CAACQ,CAAC,GAAG,CAAL,CAAZ,GAAsBM,OAAvD,EAAgE;AAC9D,WAAO,IAAP;AACD;;AAED,MAAId,YAAY,CAACQ,CAAC,GAAG,CAAL,CAAZ,GAAsBM,OAA1B,EAAmC;AACjC,SAAK,IAAIP,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,CAApB,EAAuBD,CAAC,EAAxB,EAA4B;AAC1B,UAAIS,SAAS,KAAK,IAAd,IAAsBhB,YAAY,CAACO,CAAD,CAAZ,GAAkBO,OAA5C,EAAqD;AAEnDE,QAAAA,SAAS,GAAGT,CAAZ;AACD;;AACD,UAAIP,YAAY,CAACO,CAAD,CAAZ,GAAkBQ,OAAtB,EAA+B;AAC7BE,QAAAA,SAAS,GAAGV,CAAZ;AACA;AACD;AACF;AACF;;AACD,MAAIS,SAAS,KAAK,IAAlB,EAAwB;AACtBA,IAAAA,SAAS,GAAG,CAAZ;AACD;;AACD,MAAIC,SAAS,KAAK,IAAlB,EAAwB;AACtBA,IAAAA,SAAS,GAAGT,CAAZ;AACD;;AACD,MAAIU,eAA8B,GAAG,EAArC;;AACA,MAAInB,OAAO,CAACoB,QAAR,CAAiBC,UAArB,EAAiC,CAChC,CADD,MACO;AACL,QAAI,OAAOrB,OAAO,CAACoB,QAAR,CAAiBE,WAAjB,CAA6B,CAA7B,CAAP,KAA2C,QAA/C,EAAyD;AACvDH,MAAAA,eAAe,GAAGnB,OAAO,CAACoB,QAAR,CAAiBE,WAAnC;AACD,KAFD,MAEO;AACLH,MAAAA,eAAe,GAAGnB,OAAO,CAACoB,QAAR,CAAiBE,WAAjB,CAA6BC,KAA7B,CAChBN,SADgB,EAEhBC,SAFgB,CAAlB;AAID;AACF;;AACD,SAAO;AACLM,IAAAA,IAAI,EAAE,SADD;AAELtB,IAAAA,UAAU,EAAEF,OAAO,CAACE,UAFf;AAGLkB,IAAAA,QAAQ,EAAE;AACRI,MAAAA,IAAI,EAAExB,OAAO,CAACoB,QAAR,CAAiBI,IADf;AAERF,MAAAA,WAAW,EAAEH;AAFL;AAHL,GAAP;AAQD","sourcesContent":["import { TDFeature, TDTimes, TDCoordinates } from \"../types/common\";\n\nexport function _getFeatureTimes(feature: TDFeature): TDTimes {\n  if (!feature.featureTimes) {\n    if (!feature.properties) {\n      feature.featureTimes = [];\n    } else if (feature.properties.hasOwnProperty(\"coordTimes\")) {\n      feature.featureTimes = feature.properties.coordTimes;\n    } else if (feature.properties.hasOwnProperty(\"times\")) {\n      feature.featureTimes = feature.properties.times;\n    } else if (feature.properties.hasOwnProperty(\"linestringTimestamps\")) {\n      feature.featureTimes = feature.properties.linestringTimestamps;\n    } else if (feature.properties.hasOwnProperty(\"time\")) {\n      feature.featureTimes = [feature.properties.time];\n    } else {\n      feature.featureTimes = [];\n    }\n    if (!feature.featureTimes) return [];\n    // String dates to ms\n    for (let i = 0, l = feature.featureTimes.length; i < l; i++) {\n      let time = feature.featureTimes[i];\n      if (typeof time === \"string\") {\n        time = Date.parse(time.trim());\n        feature.featureTimes[i] = time;\n      }\n    }\n  }\n  return feature.featureTimes;\n}\n\nexport function _getFeatureBetweenDates(\n  feature: TDFeature,\n  minTime: number,\n  maxTime: number\n) {\n  var featureTimes = _getFeatureTimes(feature);\n  if (featureTimes.length == 0) {\n    return feature;\n  }\n\n  var index_min = null,\n    index_max = null,\n    l = featureTimes.length;\n\n  if (featureTimes[0] > maxTime || featureTimes[l - 1] < minTime) {\n    return null;\n  }\n\n  if (featureTimes[l - 1] > minTime) {\n    for (var i = 0; i < l; i++) {\n      if (index_min === null && featureTimes[i] > minTime) {\n        // set index_min the first time that current time is greater the minTime\n        index_min = i;\n      }\n      if (featureTimes[i] > maxTime) {\n        index_max = i;\n        break;\n      }\n    }\n  }\n  if (index_min === null) {\n    index_min = 0;\n  }\n  if (index_max === null) {\n    index_max = l;\n  }\n  var new_coordinates: TDCoordinates = [];\n  if (feature.geometry.geometries) {\n  } else {\n    if (typeof feature.geometry.coordinates[0] === \"number\") {\n      new_coordinates = feature.geometry.coordinates;\n    } else {\n      new_coordinates = feature.geometry.coordinates.slice(\n        index_min,\n        index_max\n      ) as TDCoordinates;\n    }\n  }\n  return {\n    type: \"Feature\",\n    properties: feature.properties,\n    geometry: {\n      type: feature.geometry.type,\n      coordinates: new_coordinates,\n    },\n  };\n}\n"],"file":"layer.util.js"}