{"version":3,"sources":["../../src/table/table.utils.ts"],"names":["dayjs","extend","jalaliday","locale","calendar","nopeData","username","id","color","lat","long","commonSchemaColumns","label","key","tableDataParser","columns","rows","visibleRows","forEach","row","idx","userIndex","features","findIndex","ff","properties","time","format","push","f","index","geometry","geometries","coordinates","toFixed","enhancedColumns"],"mappings":"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","sourcesContent":["import {\n  createEnhancedColumns,\n  RawTableColumns,\n  RawTableRows,\n} from \"@hesaba/table\";\nimport dayjs from \"dayjs\";\nimport jalaliday from \"jalaliday\";\n\ndayjs.extend(jalaliday);\n(dayjs as any)().locale(\"fa\").calendar(\"jalali\");\n\nconst nopeData = {\n  username: \"\",\n  id: \"\",\n  color: \"\",\n  lat: \"\",\n  long: \"\",\n};\nexport const commonSchemaColumns = [\n  {\n    label: \"index\",\n    key: \"index\",\n  },\n  {\n    label: \"time\",\n    key: \"time\",\n  },\n  {\n    label: \"username\",\n    key: \"username\",\n  },\n  {\n    label: \"lat\",\n    key: \"lat\",\n  },\n  {\n    label: \"long\",\n    key: \"long\",\n  },\n];\nexport function tableDataParser(\n  columns: RawTableColumns,\n  rows: RawTableRows,\n  username: string\n) {\n  const visibleRows: any = [];\n  rows.forEach((row,idx) => {\n    const userIndex = (row?.features as any).findIndex(\n      (ff: any) => ff.properties.username == username\n    );\n    const time = dayjs(row.time as number)\n      .locale(\"fa\")\n      .calendar(\"jalali\")\n      .format(\"YYYY D MMMM hh:mm A\");\n    if (userIndex === -1) {\n      visibleRows.push({\n        time,\n        ...nopeData,\n      });\n    }\n    if (row?.features && (row?.features as any)[userIndex]) {\n      const f = (row?.features as any)[userIndex];\n\n      visibleRows.push({\n        index: idx,\n        time,\n        username: f.properties.username,\n        id: f.properties.id,\n        color: f.properties.color,\n        lat: f?.geometry?.geometries[0]?.coordinates[0]?.toFixed(2) || \"\",\n        long: f?.geometry?.geometries[0]?.coordinates[1]?.toFixed(2) || \"\",\n      });\n    }\n  });\n  const enhancedColumns = createEnhancedColumns(columns);\n\n  return { visibleRows, enhancedColumns };\n}\n"],"file":"table.utils.js"}