{"version":3,"sources":["../../src/layer/TDGeojsonLayer.tsx"],"names":["TDGeojsonLayer","pathOptions","circleProps","polylineProps","ToolTipComponent","currentData","state","features","map","f","index","properties","id","username","geometry","geometries","g","type","coordinates","color"],"mappings":";;;;;;;AAAA;;AAGA;;AACA;;;;;;AAGe,SAASA,cAAT,CAAwB;AACrCC,EAAAA,WADqC;AAErCC,EAAAA,WAFqC;AAGrCC,EAAAA,aAHqC;AAIrCC,EAAAA;AAJqC,CAAxB,EAKI;AACjB,QAAMC,WAAW,GAAG,mCAAiBC,KAAD,IAAWA,KAAK,CAACD,WAAjC,CAApB;AACA,SACE,4DACGA,WADH,aACGA,WADH,uBACGA,WAAW,CAAEE,QAAb,CAAsBC,GAAtB,CAA0B,CAACC,CAAD,EAAIC,KAAJ;AAAA;;AAAA,WACzB,6BAAC,eAAD;AACE,MAAA,GAAG,EAAG,GAAE,CAAAD,CAAC,SAAD,IAAAA,CAAC,WAAD,6BAAAA,CAAC,CAAEE,UAAH,gEAAeC,EAAf,MAAqBH,CAArB,aAAqBA,CAArB,yCAAqBA,CAAC,CAAEE,UAAxB,mDAAqB,eAAeE,QAApC,CAA6C,IAAGH,KAAM;AADhE,OAGID,CAAC,CAACK,QAAH,CAAoBC,UAApB,CAA+BP,GAA/B,CAAoCQ,CAAD;AAAA;;AAAA,aAClCA,CAAC,CAACC,IAAF,KAAW,OAAX,GACE,6BAAC,+BAAD;AACE,QAAA,WAAW,EAAED,CAAC,CAACE,WADjB;AAEE,QAAA,WAAW,EAAE;AAAEC,UAAAA,KAAK,EAAEV,CAAF,aAAEA,CAAF,yCAAEA,CAAC,CAAEE,UAAL,mDAAE,eAAeQ,KAAxB;AAA+B,aAAGlB;AAAlC,SAFf;AAGE,QAAA,WAAW,EAAEC,WAHf;AAIE,QAAA,gBAAgB,EAAEE,gBAJpB;AAKE,QAAA,UAAU,EAAEK,CAAC,CAACE;AALhB,QADF,GASE,6BAAC,2BAAD;AACE,QAAA,WAAW,EAAEK,CAAC,CAACE,WADjB;AAEE,QAAA,WAAW,EAAE;AAAEC,UAAAA,KAAK,EAAEV,CAAF,aAAEA,CAAF,yCAAEA,CAAC,CAAEE,UAAL,mDAAE,eAAeQ,KAAxB;AAA+B,aAAGlB;AAAlC,SAFf;AAGE,QAAA,aAAa,EAAEE;AAHjB,QAVgC;AAAA,KAAnC,CAHH,CADyB;AAAA,GAA1B,CADH,CADF;AA2BD","sourcesContent":["import React, { Fragment } from \"react\";\n\nimport { _getFeatureBetweenDates, _getFeatureTimes } from \"../utils/layer.util\";\nimport { useTDStoreState } from \"../store/reducerHooks\";\nimport { TDCircleMarker, TDPolyline } from \"./LayerComponents\";\nimport { TDLayerOptions } from \"../types/layer\";\n\nexport default function TDGeojsonLayer({\n  pathOptions,\n  circleProps,\n  polylineProps,\n  ToolTipComponent,\n}: TDLayerOptions) {\n  const currentData = useTDStoreState((state) => state.currentData);\n  return (\n    <>\n      {currentData?.features.map((f, index) => (\n        <Fragment\n          key={`${f?.properties?.id || f?.properties?.username}-${index}`}\n        >\n          {(f.geometry as any).geometries.map((g: any) =>\n            g.type === \"Point\" ? (\n              <TDCircleMarker\n                coordinates={g.coordinates}\n                pathOptions={{ color: f?.properties?.color, ...pathOptions }}\n                circleProps={circleProps}\n                ToolTipComponent={ToolTipComponent}\n                properties={f.properties}\n              />\n            ) : (\n              <TDPolyline\n                coordinates={g.coordinates}\n                pathOptions={{ color: f?.properties?.color, ...pathOptions }}\n                polylineProps={polylineProps}\n              />\n            )\n          )}\n        </Fragment>\n      ))}\n    </>\n  );\n}\n"],"file":"TDGeojsonLayer.js"}