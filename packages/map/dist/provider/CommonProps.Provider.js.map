{"version":3,"sources":["../../src/provider/CommonProps.Provider.tsx"],"names":["CommonPropsContext","CommonPropsProvider","children","state","commonProps","setCommonProps","withTable","action","useCommonProps","Error","useCommonPropsAction"],"mappings":";;;;;;;;;AAAA;;;;;;AASA,MAAMA,kBAAkB,GAAG,0BAAc,EAAd,CAA3B;;AAEe,SAASC,mBAAT,CAA6B;AAC1CC,EAAAA,QAD0C;AAE1CC,EAAAA;AAF0C,CAA7B,EAMZ;AACD,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgC,qBAAS;AAC7CC,IAAAA,SAAS,EAAE;AADkC,GAAT,CAAtC;AAGA,wBAAU,MAAM;AACdD,IAAAA,cAAc,CAACF,KAAD,CAAd;AACD,GAFD,EAEG,CAACA,KAAD,CAFH;AAIA,SACE,6BAAC,kBAAD,CAAoB,QAApB;AACE,IAAA,KAAK,EAAE;AAAEA,MAAAA,KAAK,EAAEC,WAAT;AAAsBG,MAAAA,MAAM,EAAEF;AAA9B;AADT,KAGGH,QAHH,CADF;AAOD;;AAEM,SAASM,cAAT,GAA0B;AAC/B,QAAM;AAAEL,IAAAA;AAAF,MAAY,uBAAWH,kBAAX,CAAlB;;AACA,MAAI,CAACG,KAAL,EAAY;AACV,UAAM,IAAIM,KAAJ,CAAU,wCAAV,CAAN;AACD;;AACD,SAAON,KAAP;AACD;;AAEM,SAASO,oBAAT,GAAgC;AACrC,QAAM;AAAEH,IAAAA;AAAF,MAAa,uBAAWP,kBAAX,CAAnB;;AACA,MAAI,CAACO,MAAL,EAAa;AACX,UAAM,IAAIE,KAAJ,CAAU,yCAAV,CAAN;AACD;;AACD,SAAOF,MAAP;AACD","sourcesContent":["import React, { createContext, useContext, useEffect, useState } from \"react\";\n\ntype CommonState = { withTable: boolean };\n\ntype CommonPropsType = {\n  state: CommonState;\n  action: (_: CommonState) => void;\n};\n\nconst CommonPropsContext = createContext({} as CommonPropsType);\n\nexport default function CommonPropsProvider({\n  children,\n  state,\n}: {\n  children: React.ReactNode;\n  state: CommonState;\n}) {\n  const [commonProps, setCommonProps] = useState({\n    withTable: false,\n  });\n  useEffect(() => {\n    setCommonProps(state);\n  }, [state]);\n\n  return (\n    <CommonPropsContext.Provider\n      value={{ state: commonProps, action: setCommonProps }}\n    >\n      {children}\n    </CommonPropsContext.Provider>\n  );\n}\n\nexport function useCommonProps() {\n  const { state } = useContext(CommonPropsContext);\n  if (!state) {\n    throw new Error(\"use common props state inside privider\");\n  }\n  return state;\n}\n\nexport function useCommonPropsAction() {\n  const { action } = useContext(CommonPropsContext);\n  if (!action) {\n    throw new Error(\"use common props action inside privider\");\n  }\n  return action;\n}\n"],"file":"CommonProps.Provider.js"}