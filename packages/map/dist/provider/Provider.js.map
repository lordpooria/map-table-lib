{"version":3,"sources":["../../src/provider/Provider.tsx"],"names":["Wrapper","children","easyPeasyStore","isWrapepdWithReactFlowProvider","getState","tdVersion","store","displayName"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;;;;;;;AAMA,MAAMA,OAAkB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC3C,QAAMC,cAAc,GAAG,0BAAvB;AACA,QAAMC,8BAA8B,GAAGD,cAAH,aAAGA,cAAH,gDAAGA,cAAc,CAAEE,QAAhB,EAAH,0DAAG,sBAA4BC,SAAnE;;AAEA,MAAIF,8BAAJ,EAAoC;AAGlC,WAAO,6BAAC,eAAD,QAAWF,QAAX,CAAP;AACD;;AAED,SAAO,6BAAC,wBAAD;AAAe,IAAA,KAAK,EAAEK;AAAtB,KAA8BL,QAA9B,CAAP;AACD,CAXD;;AAaAD,OAAO,CAACO,WAAR,GAAsB,YAAtB;eAEeP,O","sourcesContent":["import React, { Fragment, FC } from \"react\";\nimport { StoreProvider, useStore } from \"easy-peasy\";\n\nimport store, { TDStoreModel } from \"../store/store\";\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nconst Wrapper: FC<Props> = ({ children }) => {\n  const easyPeasyStore = useStore<TDStoreModel>();\n  const isWrapepdWithReactFlowProvider = easyPeasyStore?.getState()?.tdVersion;\n\n  if (isWrapepdWithReactFlowProvider) {\n    // we need to wrap it with a fragment because t's not allowed for children to be a ReactNode\n    // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/18051\n    return <Fragment>{children}</Fragment>;\n  }\n\n  return <StoreProvider store={store}>{children}</StoreProvider>;\n};\n\nWrapper.displayName = \"TDProvider\";\n\nexport default Wrapper;\n"],"file":"Provider.js"}