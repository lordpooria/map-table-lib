{"version":3,"sources":["../../../src/player/styled-component/TimeSlider.tsx"],"names":["valueText","value","TimeSlider","props","timeSliderRange","setTimeSliderRange","min","max","timeSlider","setTimeSlider","formattedData","state","currentTimeIndex","length","TimeSliderStateless","timeSteps","classes","playerSliderClasses","playerSlider","timeSliderValue","setCurrentTimeIndex","actions","commonClasses","playerSliderWrapper","PlayerThumb","ValueLabelComponent","_","index"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AAKA;;;;;;;;AAQA,SAASA,SAAT,CAAmBC,KAAnB,EAAkC;AAChC,SAAOA,KAAP;AACD;;AAED,MAAMC,UAAU,GAAIC,KAAD,IAAkB;AACnC,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwC,qBAAS;AAAEC,IAAAA,GAAG,EAAE,CAAP;AAAUC,IAAAA,GAAG,EAAE;AAAf,GAAT,CAA9C;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8B,qBAAS,CAAT,CAApC;AAEA,QAAMC,aAAa,GAAG,4BAAiBC,KAAD,IAAWA,KAAK,CAACD,aAAjC,CAAtB;AAEA,QAAME,gBAAgB,GAAG,4BAAiBD,KAAD,IAAWA,KAAK,CAACC,gBAAjC,CAAzB;AAEA,wBAAU,MAAM;AACd,QAAIA,gBAAgB,IAAI,CAAxB,EAA2B;AACzBH,MAAAA,aAAa,CAACG,gBAAD,CAAb;AACD;AACF,GAJD,EAIG,CAACA,gBAAD,CAJH;AAMA,wBAAU,MAAM;AACd,UAAML,GAAG,GAAGG,aAAa,CAACG,MAAd,GAAuB,CAAnC;AACA,QAAIN,GAAG,GAAG,CAAV,EAAaF,kBAAkB,CAAC;AAAEC,MAAAA,GAAG,EAAE,CAAP;AAAUC,MAAAA;AAAV,KAAD,CAAlB;AACd,GAHD,EAGG,CAACG,aAAD,CAHH;AAKA,SACE,6BAAC,mBAAD,eACMP,KADN,EAEMC,eAFN;AAGE,IAAA,eAAe,EAAEI;AAHnB,KADF;AAOD,CA1BD;;AA4BA,MAAMM,mBAAmB,GAAG,iBAC1B,CAAC;AACCC,EAAAA,SADD;AAECC,EAAAA,OAFD;AAGCC,EAAAA,mBAAmB,EAAEC,YAHtB;AAICC,EAAAA,eAJD;AAKCb,EAAAA,GALD;AAMCC,EAAAA;AAND,CAAD,KAOqE;AACnE,QAAMa,mBAAmB,GAAG,8BACzBC,OAAD,IAAaA,OAAO,CAACD,mBADK,CAA5B;AAGA,QAAME,aAAa,GAAG,qCAAtB;AAEA,SACE;AAAK,IAAA,SAAS,EAAE,CAAAN,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEO,mBAAT,KAAgCL;AAAhD,KAGE,6BAAC,YAAD;AACE,IAAA,SAAS,EAAC,KADZ;AAEE,IAAA,OAAO,EAAE,CAAAF,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEE,YAAT,KAAyBI,aAFpC;AAGE,IAAA,iBAAiB,EAAC,MAHpB;AAIE,IAAA,cAAc,EAAEE,oBAJlB;AAKE,IAAA,mBAAmB,EAAEC,4BALvB;AAME,IAAA,KAAK,EAAEN,eANT;AAOE,IAAA,gBAAgB,EAAEnB,SAPpB;AAQE,IAAA,IAAI,EAAEe,SARR;AASE,IAAA,GAAG,EAAET,GATP;AAUE,IAAA,GAAG,EAAEC,GAVP;AAWE,IAAA,QAAQ,EAAE,CAACmB,CAAD,EAASC,KAAT,KAAwB;AAChCP,MAAAA,mBAAmB,CAAC;AAAEO,QAAAA,KAAK,EAAEA;AAAT,OAAD,CAAnB;AACD;AAbH,IAHF,CADF;AAsBD,CApCyB,CAA5B;eAuCezB,U","sourcesContent":["import React, { memo, useEffect, useState } from \"react\";\nimport { useTDStoreActions, useTDStoreState } from \"../../store\";\nimport { PlayerCompleteProps } from \"../../types/PlayerControl\";\nimport {\n  PlayerThumb,\n  useCommonSliderStyles,\n  ValueLabelComponent,\n} from \"../../sliders\";\nimport { Slider } from \"@material-ui/core\";\n\ninterface Props {\n  timeSteps: PlayerCompleteProps[\"timeSteps\"];\n  classes: PlayerCompleteProps[\"classes\"];\n  playerSliderClasses?: string;\n}\n\nfunction valueText(value: number) {\n  return value;\n}\n\nconst TimeSlider = (props: Props) => {\n  const [timeSliderRange, setTimeSliderRange] = useState({ min: 0, max: 0 });\n  const [timeSlider, setTimeSlider] = useState(0);\n\n  const formattedData = useTDStoreState((state) => state.formattedData);\n\n  const currentTimeIndex = useTDStoreState((state) => state.currentTimeIndex);\n\n  useEffect(() => {\n    if (currentTimeIndex >= 0) {\n      setTimeSlider(currentTimeIndex);\n    }\n  }, [currentTimeIndex]);\n\n  useEffect(() => {\n    const max = formattedData.length - 1;\n    if (max > 0) setTimeSliderRange({ min: 0, max });\n  }, [formattedData]);\n\n  return (\n    <TimeSliderStateless\n      {...props}\n      {...timeSliderRange}\n      timeSliderValue={timeSlider}\n    />\n  );\n};\n\nconst TimeSliderStateless = memo(\n  ({\n    timeSteps,\n    classes,\n    playerSliderClasses: playerSlider,\n    timeSliderValue,\n    min,\n    max,\n  }: Props & { min: number; max: number; timeSliderValue: number }) => {\n    const setCurrentTimeIndex = useTDStoreActions(\n      (actions) => actions.setCurrentTimeIndex\n    );\n    const commonClasses = useCommonSliderStyles();\n\n    return (\n      <div className={classes?.playerSliderWrapper || playerSlider}>\n        {/* <PlayCircleIcon className={classes.whiteIcon} /> */}\n\n        <Slider\n          component=\"div\"\n          classes={classes?.playerSlider || commonClasses}\n          valueLabelDisplay=\"auto\"\n          ThumbComponent={PlayerThumb as any}\n          ValueLabelComponent={ValueLabelComponent}\n          value={timeSliderValue}\n          valueLabelFormat={valueText}\n          step={timeSteps}\n          min={min}\n          max={max}\n          onChange={(_: any, index: any) => {\n            setCurrentTimeIndex({ index: index as any });\n          }}\n          {...({} as any)}\n        />\n      </div>\n    );\n  }\n);\n\nexport default TimeSlider;\n"],"file":"TimeSlider.js"}