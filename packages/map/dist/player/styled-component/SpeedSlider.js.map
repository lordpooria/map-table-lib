{"version":3,"sources":["../../../src/player/styled-component/SpeedSlider.tsx"],"names":["valuetext","value","SpeedSlider","speedStep","classes","speedSliderClasses","whiteIconClasses","speedIcon","setTransitionTime","min","max","speedSliderValue","commonClasses","speedSliderWrapper","speedSlider","PlayerThumb","ValueLabelComponent","_","v"],"mappings":";;;;;;;AAAA;;AAEA;;AAEA;;AAKA;;AACA;;;;;;;;AAEA,SAASA,SAAT,CAAmBC,KAAnB,EAAkC;AAChC,SAAQ,GAAEA,KAAM,KAAhB;AACD;;AAcD,MAAMC,WAAW,GAAG,iBAClB,CAAC;AACCC,EAAAA,SADD;AAECC,EAAAA,OAFD;AAGCC,EAAAA,kBAHD;AAICC,EAAAA,gBAJD;AAKCC,EAAAA,SALD;AAMCC,EAAAA,iBAND;AAOCC,EAAAA,GAPD;AAQCC,EAAAA,GARD;AASCC,EAAAA;AATD,CAAD,KAUa;AACX,QAAMC,aAAa,GAAG,qCAAtB;AACA,SACE;AAAK,IAAA,SAAS,EAAE,CAAAR,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAES,kBAAT,KAA+BR;AAA/C,KACE,6BAAC,gCAAD;AAAiB,IAAA,SAAS,EAAEE;AAA5B,KACE,6BAAC,kBAAD;AAAW,IAAA,SAAS,EAAED;AAAtB,IADF,CADF,EAKE,6BAAC,YAAD;AACE,IAAA,OAAO,EAAE,CAAAF,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEU,WAAT,KAAwBF,aADnC;AAEE,IAAA,cAAc,EAAEG,oBAFlB;AAGE,IAAA,mBAAmB,EAAEC,4BAHvB;AAIE,IAAA,iBAAiB,EAAC,MAJpB;AAKE,IAAA,KAAK,EAAEL,gBALT;AAME,IAAA,gBAAgB,EAAEX,SANpB;AAOE,IAAA,IAAI,EAAEG,SAPR;AAQE,IAAA,GAAG,EAAEM,GARP;AASE,IAAA,GAAG,EAAEC,GATP;AAUE,IAAA,QAAQ,EAAE,CAACO,CAAD,EAASC,CAAT,KAAoB;AAC5BV,MAAAA,iBAAiB,CAAC,OAAO,CAACU,CAAT,CAAjB;AACD;AAZH,IALF,CADF;AAuBD,CApCiB,CAApB;eAuCehB,W","sourcesContent":["import React, { memo } from \"react\";\n\nimport { RenderComponent } from \"../helperComponent\";\nimport { PlayerCompleteProps } from \"../../types/PlayerControl\";\nimport {\n  PlayerThumb,\n  useCommonSliderStyles,\n  ValueLabelComponent,\n} from \"../../sliders\";\nimport GaugeIcon from \"../../assets/icons/common/GaugeIcon\";\nimport { Slider } from \"@material-ui/core\";\n\nfunction valuetext(value: number) {\n  return `${value}fps`;\n}\n\ninterface Props {\n  speedStep: PlayerCompleteProps[\"speedStep\"];\n  classes: PlayerCompleteProps[\"classes\"];\n  speedIcon: PlayerCompleteProps[\"speedIcon\"];\n  speedSliderClasses?: string;\n  whiteIconClasses?: string;\n  setTransitionTime: (_: number) => void;\n  min: number;\n  max: number;\n  speedSliderValue: number;\n}\n\nconst SpeedSlider = memo(\n  ({\n    speedStep,\n    classes,\n    speedSliderClasses,\n    whiteIconClasses,\n    speedIcon,\n    setTransitionTime,\n    min,\n    max,\n    speedSliderValue,\n  }: Props) => {\n    const commonClasses = useCommonSliderStyles();\n    return (\n      <div className={classes?.speedSliderWrapper || speedSliderClasses}>\n        <RenderComponent Component={speedIcon}>\n          <GaugeIcon className={whiteIconClasses} />\n        </RenderComponent>\n\n        <Slider\n          classes={classes?.speedSlider || commonClasses}\n          ThumbComponent={PlayerThumb as any}\n          ValueLabelComponent={ValueLabelComponent}\n          valueLabelDisplay=\"auto\"\n          value={speedSliderValue}\n          valueLabelFormat={valuetext}\n          step={speedStep}\n          min={min}\n          max={max}\n          onChange={(_: any, v: any) => {\n            setTransitionTime(1000 / +v);\n          }}\n          {...({} as any)}\n        />\n      </div>\n    );\n  }\n);\n\nexport default SpeedSlider;\n"],"file":"SpeedSlider.js"}