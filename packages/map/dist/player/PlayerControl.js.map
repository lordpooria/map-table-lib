{"version":3,"sources":["../../src/player/PlayerControl.tsx"],"names":["BorderIconButton","theme","root","border","palette","primary","main","margin","backgroundColor","SmallIconButton","BUFFER","PlayerControl","leafletMap","loop","timeSteps","speedStep","autoPlay","startedOver","minSpeed","maxSpeed","classes","transitionTime","backwardButton","forwardButton","playButton","timeSlider","speedSlider","speedIcon","playReverseButton","state","actions","playerStoreModel","playerClasses","previousTime","nextTime","setTransitionTime","bufferSize","start","stop","startReverse","animationFinished","setPlay","setReversePlay","steps","isReversePlaying","rootClass","commonPlayerRoot","playerRoot","iconClass","icons","icon","speedIconClass","marginIcon","dragging","disable","doubleClickZoom","enable","iconContainer","iconButton","numSteps","isPlaying","playerSlider"],"mappings":"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","sourcesContent":["import { useLocalStore } from \"easy-peasy\";\nimport React, { memo, useCallback, useEffect } from \"react\";\nimport NextIcon from \"../assets/icons/common/NextIcon\";\nimport PauseIcon from \"../assets/icons/common/PauseIcon\";\nimport PlayIcon from \"../assets/icons/common/PlayIcon\";\nimport PreviousIcon from \"../assets/icons/common/PreviousIcon\";\n\nimport { playerStoreModel } from \"./playerReducer\";\n\nimport { usePlayer } from \"./usePlayer\";\n\nimport { PlayerCompleteProps } from \"../types/PlayerControl\";\nimport { SmallIconButton } from \"@hesaba/theme-language\";\nimport { useTDStoreActions } from \"../store/reducerHooks\";\nimport useStyles from \"./PlayerControl.styles\";\nimport { withStyles } from \"@material-ui/core\";\nimport clsx from \"clsx\";\nimport PlayReverseIcon from \"../assets/icons/common/PlayReverseIcon\";\nimport TimeSlider from \"./styled-component/TimeSlider\";\nimport { RenderComponent } from \"./helperComponent\";\nimport SpeedSlider from \"./styled-component/SpeedSlider\";\n\nconst BorderIconButton = withStyles((theme) => ({\n  root: {\n    border: `1px solid ${theme.palette.primary.main} `,\n    margin: 4,\n    \"&:hover\": {\n      backgroundColor: `${theme.palette.primary.main}55`,\n    },\n  },\n}))(SmallIconButton);\n\nconst BUFFER = 5;\n\nconst PlayerControl = memo(\n  ({\n    leafletMap,\n    loop = false,\n    timeSteps = 1,\n    speedStep = 1,\n    autoPlay = false,\n    startedOver = true,\n    minSpeed = 0.1,\n    maxSpeed = 10,\n    classes,\n    transitionTime,\n    backwardButton = true,\n    forwardButton = true,\n    playButton = true,\n    timeSlider = true,\n    speedSlider = true,\n    speedIcon = true,\n    playReverseButton = false,\n  }: PlayerCompleteProps) => {\n    const [state, actions] = useLocalStore(() => playerStoreModel);\n    const playerClasses = useStyles();\n\n    const previousTime = useTDStoreActions((actions) => actions.previousTime);\n    const nextTime = useTDStoreActions((actions) => actions.nextTime);\n\n    useEffect(() => {\n      if (typeof transitionTime === \"number\") {\n        actions.setTransitionTime({ bufferSize: BUFFER, transitionTime });\n      }\n    }, [transitionTime]);\n\n    const setTransitionTime = useCallback((transitionTime: number) => {\n      actions.setTransitionTime({ bufferSize: BUFFER, transitionTime });\n    }, []);\n\n    const { start, stop, startReverse } = usePlayer({\n      bufferSize: state.bufferSize,\n\n      loop,\n      transitionTime: state.transitionTime,\n      animationFinished: actions.animationFinished,\n      setPlay: actions.setPlay,\n      setReversePlay: actions.setReversePlay,\n      steps: timeSteps,\n      startedOver,\n      autoPlay,\n      isReversePlaying: state.isReversePlaying,\n    });\n    const rootClass = clsx(playerClasses.commonPlayerRoot, classes?.root, {\n      [playerClasses.playerRoot]: !classes?.root,\n    });\n    const iconClass = classes?.icons || playerClasses.icon;\n    const speedIconClass = clsx(classes?.icons, playerClasses.marginIcon, {\n      [playerClasses.icon]: !classes?.icons,\n    });\n\n    return (\n      <div\n        onMouseEnter={() => {\n          leafletMap.dragging.disable();\n          leafletMap.doubleClickZoom.disable();\n        }}\n        onMouseLeave={() => {\n          leafletMap.dragging.enable();\n          leafletMap.doubleClickZoom.enable();\n        }}\n        className={rootClass}\n      >\n        <div className={playerClasses.iconContainer}>\n          <RenderComponent Component={backwardButton}>\n            <BorderIconButton\n              className={classes?.iconButton}\n              onClick={() => {\n                previousTime({ numSteps: timeSteps, loop });\n              }}\n            >\n              <PreviousIcon className={iconClass} />\n            </BorderIconButton>\n          </RenderComponent>\n\n          <RenderComponent Component={playReverseButton}>\n            <BorderIconButton\n              className={classes?.iconButton}\n              onClick={() => {\n                if (state.isReversePlaying) {\n                  stop();\n                } else {\n                  startReverse();\n                }\n              }}\n            >\n              {state.isReversePlaying ? (\n                <PauseIcon className={iconClass} />\n              ) : (\n                <PlayReverseIcon className={iconClass} />\n              )}\n            </BorderIconButton>\n          </RenderComponent>\n\n          <RenderComponent Component={playButton}>\n            <BorderIconButton\n              className={classes?.iconButton}\n              onClick={() => {\n                if (state.isPlaying) {\n                  stop();\n                } else {\n                  start();\n                }\n              }}\n            >\n              {state.isPlaying ? (\n                <PauseIcon className={iconClass} />\n              ) : (\n                <PlayIcon className={iconClass} />\n              )}\n            </BorderIconButton>\n          </RenderComponent>\n\n          <RenderComponent Component={forwardButton}>\n            <BorderIconButton\n              className={classes?.iconButton}\n              onClick={() => {\n                nextTime({ numSteps: timeSteps, loop });\n              }}\n            >\n              <NextIcon className={iconClass} />\n            </BorderIconButton>\n          </RenderComponent>\n        </div>\n\n        <RenderComponent Component={timeSlider}>\n          <TimeSlider\n            timeSteps={timeSteps}\n            classes={classes}\n            playerSliderClasses={playerClasses.playerSlider}\n          />\n        </RenderComponent>\n\n        <RenderComponent Component={speedSlider}>\n          <SpeedSlider\n            speedStep={speedStep}\n            classes={classes}\n            speedIcon={speedIcon}\n            speedSliderClasses={playerClasses.speedSlider}\n            whiteIconClasses={speedIconClass}\n            setTransitionTime={setTransitionTime}\n            min={minSpeed}\n            max={maxSpeed}\n            speedSliderValue={state.speedSlider}\n          />\n        </RenderComponent>\n      </div>\n    );\n  }\n);\n\nexport default PlayerControl;\n"],"file":"PlayerControl.js"}