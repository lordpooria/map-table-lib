{"version":3,"sources":["../../../src/virtualize-table/header/VirtualTableHeader.tsx"],"names":["useStyles","theme","headerContainer","display","top","position","zIndex","alignItems","commonHeaderContainer","backgroundColor","borderBottom","palette","grey","titleText","flex","dividerIcon","pointerEvents","width","RESIZE_HANDLE_WIDTH","height","dividerIconWrapper","cursor","opacity","VirtualTableHeader","selectable","isSelected","classes","CheckboxProps","rest","tableClasses","commonClasses","visibleColumns","state","toggleAllRows","actions","calcRowWidth","commonSidebar","itemHeight","HESABA_TABLE_ROW_CLASS","root","checkbox","map","props","index","key","cell"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AAGA;;AAEA;;AACA;;AACA;;AACA;;AAGA;;;;;;;;;;AAEA,MAAMA,SAAS,GAAG,sBAAYC,KAAD,IAC3B,wBAAa;AACXC,EAAAA,eAAe,EAAE;AACfC,IAAAA,OAAO,EAAE,MADM;AAEfC,IAAAA,GAAG,EAAE,CAFU;AAGfC,IAAAA,QAAQ,EAAE,QAHK;AAIfC,IAAAA,MAAM,EAAE,CAJO;AAKfC,IAAAA,UAAU,EAAE;AALG,GADN;AAQXC,EAAAA,qBAAqB,EAAE;AACrBC,IAAAA,eAAe,EAAE,uBADI;AAErBC,IAAAA,YAAY,EAAG,SAAQT,KAAK,CAACU,OAAN,CAAcC,IAAd,CAAmB,GAAnB,CAAwB;AAF1B,GARZ;AAYXC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE;AADG,GAZA;AAeXC,EAAAA,WAAW,EAAE;AACXC,IAAAA,aAAa,EAAE,MADJ;AAEXC,IAAAA,KAAK,EAAEC,mCAFI;AAGXC,IAAAA,MAAM,EAAED;AAHG,GAfF;AAoBXE,EAAAA,kBAAkB,EAAE;AAClBC,IAAAA,MAAM,EAAE,YADU;AAElBC,IAAAA,OAAO,EAAE,GAFS;AAGlB,eAAW;AACTA,MAAAA,OAAO,EAAE;AADA;AAHO;AApBT,CAAb,CADgB,CAAlB;;AA+BA,MAAMC,kBAAkB,GAAG,CAAC;AAC1BC,EAAAA,UAD0B;AAE1BC,EAAAA,UAF0B;AAG1BC,EAAAA,OAH0B;AAI1BT,EAAAA,KAJ0B;AAK1BU,EAAAA,aAL0B;AAO1B,KAAGC;AAPuB,CAAD,KAQF;AACvB,QAAMC,YAAY,GAAG7B,SAAS,EAA9B;AAEA,QAAM8B,aAAa,GAAG,4BAAtB;AACA,QAAMC,cAAc,GAAG,kCAAgBC,KAAD,IAAWA,KAAK,CAACD,cAAhC,CAAvB;AACA,QAAME,aAAa,GAAG,oCAAkBC,OAAD,IAAaA,OAAO,CAACD,aAAtC,CAAtB;AACA,QAAME,YAAY,GAAG,+BAAkBJ,cAAlB,EAAkCd,KAAlC,CAArB;AAEA,SACE;AACE,IAAA,KAAK,EAAE;AACLE,MAAAA,MAAM,EAAEiB,8BAAcC,UADjB;AAELpB,MAAAA,KAAK,EAAEkB,YAAY;AAFd,KADT;AAKE,IAAA,SAAS,EAAE,mBACTG,iCADS,EAETT,YAAY,CAAC3B,eAFJ,EAGT,yBAAY2B,YAAY,CAACrB,qBAAzB,EAAgDkB,OAAhD,aAAgDA,OAAhD,uBAAgDA,OAAO,CAAEa,IAAzD,CAHS;AALb,KAWGf,UAAU,IACT,6BAAC,cAAD;AACE,IAAA,SAAS,EAAE,mBAAK,2BAAL,CADb;AAEE,IAAA,OAAO,EAAEC,UAFX;AAGE,IAAA,QAAQ,EAAE,MAAM;AACdQ,MAAAA,aAAa,CAAC;AAAER,QAAAA;AAAF,OAAD,CAAb;AACD,KALH;AAME,IAAA,KAAK,EAAC,SANR;AAOE,IAAA,OAAO,EAAE;AAAEc,MAAAA,IAAI,EAAET,aAAa,CAACU;AAAtB;AAPX,KAQMb,aARN,EAZJ,EAwBGI,cAAc,CAACU,GAAf,CAAmB,CAACC,KAAD,EAAQC,KAAR,KAClB,6BAAC,eAAD;AAAU,IAAA,GAAG,EAAED,KAAK,CAACE;AAArB,KACE,6BAAC,iBAAD,eACMF,KADN,EAEMd,IAFN;AAGE,IAAA,QAAQ,EAAEe,KAHZ;AAIE,IAAA,MAAM,EAAED,KAAK,CAACE,GAJhB;AAKE,IAAA,OAAO,EAAElB,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEmB;AALpB,KADF,CADD,CAxBH,CADF;AAsCD,CAtDD;;eAwDetB,kB","sourcesContent":["import React from \"react\";\nimport { Checkbox, createStyles, makeStyles } from \"@material-ui/core\";\n\nimport { commonSidebar, RESIZE_HANDLE_WIDTH } from \"../../utils/themeConstants\";\n\nimport { Fragment } from \"react\";\nimport { useTStoreActions, useTStoreState } from \"../../store/reducerHooks\";\n\nimport HeadCell from \"../../cell/HeadCell\";\nimport { HESABA_TABLE_ROW_CLASS } from \"../../utils/constants\";\nimport clsx from \"clsx\";\nimport useCommonStyles from \"../../styles/commonStyles\";\n\nimport { CompleteHeadProps } from \"../../types/tableElements\";\nimport { chooseClass, useCalcTableWidth } from \"../../utils/helper\";\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    headerContainer: {\n      display: \"flex\",\n      top: 0,\n      position: \"sticky\",\n      zIndex: 2,\n      alignItems: \"center\",\n    },\n    commonHeaderContainer: {\n      backgroundColor: \"rgba(255,255,255,0.8)\",\n      borderBottom: `solid ${theme.palette.grey[300]} 1px`,\n    },\n    titleText: {\n      flex: 1,\n    },\n    dividerIcon: {\n      pointerEvents: \"none\",\n      width: RESIZE_HANDLE_WIDTH,\n      height: RESIZE_HANDLE_WIDTH,\n    },\n    dividerIconWrapper: {\n      cursor: \"col-resize\",\n      opacity: 0.4,\n      \"&:hover\": {\n        opacity: 1,\n      },\n    },\n  })\n);\n\nconst VirtualTableHeader = ({\n  selectable,\n  isSelected,\n  classes,\n  width,\n  CheckboxProps,\n\n  ...rest\n}: CompleteHeadProps) => {\n  const tableClasses = useStyles();\n  // const commonClasses = useCommonStyles();\n  const commonClasses = useCommonStyles();\n  const visibleColumns = useTStoreState((state) => state.visibleColumns);\n  const toggleAllRows = useTStoreActions((actions) => actions.toggleAllRows);\n  const calcRowWidth = useCalcTableWidth(visibleColumns, width);\n\n  return (\n    <div\n      style={{\n        height: commonSidebar.itemHeight,\n        width: calcRowWidth(),\n      }}\n      className={clsx(\n        HESABA_TABLE_ROW_CLASS,\n        tableClasses.headerContainer,\n        chooseClass(tableClasses.commonHeaderContainer, classes?.root)\n      )}\n    >\n      {selectable && (\n        <Checkbox\n          className={clsx(\"HESABA_TABLE_HEADER_CLASS\")}\n          checked={isSelected}\n          onChange={() => {\n            toggleAllRows({ isSelected });\n          }}\n          color=\"primary\"\n          classes={{ root: commonClasses.checkbox }}\n          {...CheckboxProps}\n        />\n      )}\n\n      {visibleColumns.map((props, index) => (\n        <Fragment key={props.key}>\n          <HeadCell\n            {...props}\n            {...rest}\n            colIndex={index}\n            colKey={props.key}\n            classes={classes?.cell}\n          />\n        </Fragment>\n      ))}\n    </div>\n  );\n};\n\nexport default VirtualTableHeader;\n"],"file":"VirtualTableHeader.js"}