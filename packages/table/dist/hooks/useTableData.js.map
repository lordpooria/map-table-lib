{"version":3,"sources":["../../src/hooks/useTableData.ts"],"names":["createEnhancedColumns","columns","map","c","DATA_FIELD","HESABA_DATA_FIELD","key","visible","sticky","sorted","undefined","type","createEnhancedRows","rows","r","index","id","selected","parseTableData","enhancedColumns","visibleRows","useTableData","tableDataParser","setTableData","actions"],"mappings":";;;;;;;;;;AAAA;;AAUA;;AACA;;AAEO,SAASA,qBAAT,CAA+BC,OAA/B,EAAuE;AAC5E,SAAOA,OAAO,CAACC,GAAR,CAAaC,CAAD;AAAA;;AAAA,WAAQ,EACzB,GAAGA,CADsB;AAEzB,OAACC,qBAAD,GAAe,GAAEC,4BAAkB,IAAGF,CAAC,CAACG,GAAc,EAF7B;AAGzBC,MAAAA,OAAO,EAAE,IAHgB;AAIzBC,MAAAA,MAAM,EAAE,KAJiB;AAKzBC,MAAAA,MAAM,EAAEC,SALiB;AAMzBC,MAAAA,IAAI,aAAER,CAAF,aAAEA,CAAF,uBAAEA,CAAC,CAAEQ,IAAL,6CAAa;AANQ,KAAR;AAAA,GAAZ,CAAP;AAQD;;AACM,SAASC,kBAAT,CAA4BC,IAA5B,EAA2D;AAChE,SAAOA,IAAI,CAACX,GAAL,CAAS,CAACY,CAAD,EAAIC,KAAJ,MAAe;AAC7BC,IAAAA,EAAE,EAAED,KADyB;AAE7BE,IAAAA,QAAQ,EAAE,KAFmB;AAG7B,OAAGH;AAH0B,GAAf,CAAT,CAAP;AAKD;;AAEM,SAASI,cAAT,CAAwBjB,OAAxB,EAAkDY,IAAlD,EAAsE;AAC3E,QAAMM,eAAe,GAAGnB,qBAAqB,CAACC,OAAD,CAA7C;AACA,QAAMmB,WAAW,GAAGR,kBAAkB,CAACC,IAAD,CAAtC;AACA,SAAO;AAAEM,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,GAAP;AACD;;AAEc,SAASC,YAAT,CACbpB,OADa,EAEbY,IAFa,EAGbS,eAHa,EAIb;AACA,QAAMC,YAAY,GAAG,oCAAkBC,OAAD,IAAaA,OAAO,CAACD,YAAtC,CAArB;AACA,wBAAU,MAAM;AACd,QAAID,eAAJ,EAAqBC,YAAY,CAACD,eAAe,CAACrB,OAAD,EAAUY,IAAV,CAAhB,CAAZ,CAArB,KACKU,YAAY,CAACL,cAAc,CAACjB,OAAD,EAAUY,IAAV,CAAf,CAAZ;AACN,GAHD,EAGG,CAACZ,OAAD,EAAUY,IAAV,EAAgBS,eAAhB,CAHH;AAID","sourcesContent":["import { useEffect } from \"react\";\n\nimport {\n  RawTableColumns,\n  RawTableRows,\n  TableColumns,\n  TableDataParser,\n  TableRows,\n} from \"../types/main\";\n\nimport { useTStoreActions } from \"../store/reducerHooks\";\nimport { DATA_FIELD, HESABA_DATA_FIELD } from \"../utils/constants\";\n\nexport function createEnhancedColumns(columns: RawTableColumns): TableColumns {\n  return columns.map((c) => ({\n    ...c,\n    [DATA_FIELD]: `${HESABA_DATA_FIELD}-${c.key as string}`,\n    visible: true,\n    sticky: false,\n    sorted: undefined,\n    type: c?.type ?? \"string\",\n  }));\n}\nexport function createEnhancedRows(rows: RawTableRows): TableRows {\n  return rows.map((r, index) => ({\n    id: index,\n    selected: false,\n    ...r,\n  }));\n}\n\nexport function parseTableData(columns: RawTableColumns, rows: RawTableRows) {\n  const enhancedColumns = createEnhancedColumns(columns);\n  const visibleRows = createEnhancedRows(rows);\n  return { enhancedColumns, visibleRows };\n}\n\nexport default function useTableData(\n  columns: RawTableColumns,\n  rows: RawTableRows,\n  tableDataParser: TableDataParser | undefined\n) {\n  const setTableData = useTStoreActions((actions) => actions.setTableData);\n  useEffect(() => {\n    if (tableDataParser) setTableData(tableDataParser(columns, rows));\n    else setTableData(parseTableData(columns, rows));\n  }, [columns, rows, tableDataParser]);\n}\n"],"file":"useTableData.js"}