{"version":3,"sources":["../../src/types/main.ts"],"names":[],"mappings":";;AAAA","sourcesContent":["import { DATA_FIELD } from \"../utils/constants\";\n\nexport type SortType = undefined | \"ASC\" | \"DESC\";\n\nexport type PageDir = \"rtl\" | \"ltr\";\n\nexport type ColumnType = \"number\" | \"string\" | \"date\" | \"geographic\";\n\nexport interface TableComponentProps {\n  index: number;\n  value: any;\n  row: any;\n  rowKey: any;\n  label: string;\n  className?:string\n}\n\nexport type TableColumnData = {\n  // key: keyof T;\n  // label: keyof T;\n  key: string;\n  label: string;\n  type?: ColumnType;\n};\n\nexport type RawTableColumn<T> = TableColumnData & {\n  minWidth?: number;\n  CellComponent?: React.FC<TableComponentProps>;\n  HeaderComponent?: React.FC<any>;\n  className?: string;\n  custom?: T;\n};\n\n// type BaseTableValue = string | number | boolean;\n\n// type TableValue =\n//   | BaseTableValue\n//   | {\n//       value: BaseTableValue;\n//       collapsedRows?: RawTableRows;\n//       extraData?: any;\n//     }\n//   | undefined;\n\nexport type RawTableRow = Record<string, /*TableValue*/ any> & {\n  id?: number | string;\n};\n\nexport type RawTableRows = Array<RawTableRow>;\n\nexport type RawTableColumns<T extends {} = any> = Array<RawTableColumn<T>>;\n\nexport type TableColumn<T extends {} = any> = RawTableColumn<T> & {\n  [DATA_FIELD]: string;\n  visible: boolean;\n  sticky: boolean;\n  sorted: SortType;\n  type: ColumnType;\n};\n\nexport type TableColumns<T extends {} = any> = Array<TableColumn<T>>;\n\nexport type TableRows = Array<RawTableRow & { selected: boolean }>;\n\nexport type TableDataParser = (\n  columns: RawTableColumns,\n  rows: RawTableRows\n) => { enhancedColumns: TableColumns; visibleRows: TableRows };\n"],"file":"main.js"}