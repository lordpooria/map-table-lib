{"version":3,"sources":["../../src/container/TableSizeProvider.tsx"],"names":["TableSizeActionContext","TableSizeStateContext","TableSizeProvider","children","state","actions","vtStoreTableSize","useTableSizeState","Error","useTableSizeAction"],"mappings":";;;;;;;;;AACA;;AACA;;AACA;;;;;;;;AASA,MAAMA,sBAAsB,GAAG,0BAC7B,EAD6B,CAA/B;AAGA,MAAMC,qBAAqB,GAAG,0BAC5B,EAD4B,CAA9B;;AAeO,SAASC,iBAAT,CAA2B;AAAEC,EAAAA;AAAF,CAA3B,EAAwE;AAC7E,QAAM,CAACC,KAAD,EAAQC,OAAR,IAAmB,8BAAc,MAAMC,kBAApB,CAAzB;AAEA,SACE,6BAAC,qBAAD,CAAuB,QAAvB;AAAgC,IAAA,KAAK,EAAE;AAAEF,MAAAA;AAAF;AAAvC,KACE,6BAAC,sBAAD,CAAwB,QAAxB;AAAiC,IAAA,KAAK,EAAE;AAAEC,MAAAA;AAAF;AAAxC,KACGF,QADH,CADF,CADF;AAOD;;AAEM,SAASI,iBAAT,GAA6B;AAClC,QAAM;AAAEH,IAAAA;AAAF,MAAY,uBAAWH,qBAAX,CAAlB;;AACA,MAAI,CAACG,KAAL,EAAY;AACV,UAAMI,KAAK,CAAC,2BAAD,CAAX;AACD;;AACD,SAAOJ,KAAP;AACD;;AAEM,SAASK,kBAAT,GAA8B;AACnC,QAAM;AAAEJ,IAAAA;AAAF,MAAc,uBAAWL,sBAAX,CAApB;;AACA,MAAI,CAACK,OAAL,EAAc;AACZ,UAAMG,KAAK,CAAC,2BAAD,CAAX;AACD;;AACD,SAAOH,OAAP;AACD","sourcesContent":["import { CurrentWidths, TotalWidth } from \"../types\";\nimport { Actions, useLocalStore } from \"easy-peasy\";\nimport React, { createContext, useContext } from \"react\";\nimport vtStoreTableSize, { VTStoreTableSize } from \"../store/tableSize\";\n\ntype TableSizeStateType = {\n  state: { currentWidths: CurrentWidths; totalWidth: TotalWidth };\n};\ntype TableSizeActionType = {\n  actions: Actions<VTStoreTableSize>;\n};\n\nconst TableSizeActionContext = createContext<TableSizeActionType>(\n  {} as TableSizeActionType\n);\nconst TableSizeStateContext = createContext<TableSizeStateType>(\n  {} as TableSizeStateType\n);\n\n// export const TableSizeProvider: FC = ({ children }) => {\n//   const easyPeasyStore = useStore<VTStoreTableSize>();\n//   const isWrapepdWithVTSizeProvider = easyPeasyStore?.getState()?.VTSizeVersion;\n\n//   if (isWrapepdWithVTSizeProvider) {\n//     return <>{children}</>;\n//   }\n\n//   return <StoreProvider store={vtStoreTableSize}>{children}</StoreProvider>;\n// };\n\nexport function TableSizeProvider({ children }: { children: React.ReactNode }) {\n  const [state, actions] = useLocalStore(() => vtStoreTableSize);\n\n  return (\n    <TableSizeStateContext.Provider value={{ state }}>\n      <TableSizeActionContext.Provider value={{ actions }}>\n        {children}\n      </TableSizeActionContext.Provider>\n    </TableSizeStateContext.Provider>\n  );\n}\n\nexport function useTableSizeState() {\n  const { state } = useContext(TableSizeStateContext);\n  if (!state) {\n    throw Error(\"use state inside provider\");\n  }\n  return state;\n}\n\nexport function useTableSizeAction() {\n  const { actions } = useContext(TableSizeActionContext);\n  if (!actions) {\n    throw Error(\"use state inside provider\");\n  }\n  return actions;\n}\n"],"file":"TableSizeProvider.js"}