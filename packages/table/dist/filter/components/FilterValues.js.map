{"version":3,"sources":["../../../src/filter/components/FilterValues.tsx"],"names":["SimpleNumericInput","filterIndex","valIndex","onSetFilter","value","label","classes","handleChange","_","e","target","root","input","SimpleStringInput"],"mappings":";;;;;;;;AAAA;;AACA;;AAEA;;;;AAeO,SAASA,kBAAT,CAA4B;AACjCC,EAAAA,WADiC;AAEjCC,EAAAA,QAFiC;AAGjCC,EAAAA,WAHiC;AAIjCC,EAAAA,KAJiC;AAKjCC,EAAAA,KALiC;AAMjCC,EAAAA;AANiC,CAA5B,EAOa;AAGlB,QAAMC,YAAY,GAAIC,CAAD,IACnBC,CADkC,IAE/B;AACH,QAAI,CAACA,CAAC,CAACC,MAAF,CAASN,KAAd,EAAqB;AACrBD,IAAAA,WAAW,CAACF,WAAD,EAAcC,QAAd,EAAwBO,CAAC,CAACC,MAAF,CAASN,KAAjC,CAAX;AACD,GALD;;AAOA,SACE,6BAAC,eAAD;AACE,IAAA,OAAO,EAAE;AAAEO,MAAAA,IAAI,EAAE,mBAAKL,OAAL,aAAKA,OAAL,uBAAKA,OAAO,CAAEK,IAAd,EAAoBL,OAApB,aAAoBA,OAApB,uBAAoBA,OAAO,CAAEM,KAA7B;AAAR,KADX;AAEE,IAAA,GAAG,EAAG,UAASV,QAAS,EAF1B;AAGE,IAAA,KAAK,EAAEE,KAHT;AAIE,IAAA,QAAQ,EAAEG,YAAY,CAACL,QAAD,CAJxB;AAKE,IAAA,IAAI,EAAC,QALP;AAME,IAAA,KAAK,EAAEG,KANT;AAOE,IAAA,OAAO,EAAC;AAPV,IADF;AAWD;;AAEM,SAASQ,iBAAT,CAA2B;AAChCZ,EAAAA,WADgC;AAEhCC,EAAAA,QAFgC;AAGhCC,EAAAA,WAHgC;AAIhCC,EAAAA,KAJgC;AAKhCE,EAAAA,OALgC;AAMhCD,EAAAA;AANgC,CAA3B,EAOa;AAClB,QAAME,YAAY,GAAIL,QAAD,IACnBO,CADyC,IAEtC;AACH,QAAI,CAACA,CAAC,CAACC,MAAF,CAASN,KAAd,EAAqB;AACrBD,IAAAA,WAAW,CAACF,WAAD,EAAcC,QAAd,EAAwBO,CAAC,CAACC,MAAF,CAASN,KAAjC,CAAX;AACD,GALD;;AAOA,SACE,6BAAC,eAAD;AACE,IAAA,OAAO,EAAE;AAAEO,MAAAA,IAAI,EAAE,mBAAKL,OAAL,aAAKA,OAAL,uBAAKA,OAAO,CAAEK,IAAd,EAAoBL,OAApB,aAAoBA,OAApB,uBAAoBA,OAAO,CAAEM,KAA7B;AAAR,KADX;AAEE,IAAA,GAAG,EAAG,UAASV,QAAS,EAF1B;AAGE,IAAA,KAAK,EAAEE,KAHT;AAIE,IAAA,QAAQ,EAAEG,YAAY,CAACL,QAAD,CAJxB;AAKE,IAAA,KAAK,EAAEG,KALT;AAME,IAAA,OAAO,EAAC;AANV,IADF;AAUD","sourcesContent":["import React from \"react\";\nimport { TextField } from \"@material-ui/core\";\n\nimport clsx from \"clsx\";\n\nexport interface FilterBaseProps {\n  filterIndex: number;\n  valIndex: number;\n  onSetFilter: (\n    filterIndex: number,\n    itemValIndex: number,\n    itemVal: any\n  ) => void;\n  value: any;\n  label: string;\n  classes?: { root?: string; input?: string };\n}\n\nexport function SimpleNumericInput({\n  filterIndex,\n  valIndex,\n  onSetFilter,\n  value,\n  label,\n  classes,\n}: FilterBaseProps) {\n  // const classes = filterValueStyles();\n\n  const handleChange = (_: number) => (\n    e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => {\n    if (!e.target.value) return;\n    onSetFilter(filterIndex, valIndex, e.target.value);\n  };\n  // if (value === undefined || value === null) return null;\n  return (\n    <TextField\n      classes={{ root: clsx(classes?.root, classes?.input) }}\n      key={`number-${valIndex}`}\n      value={value}\n      onChange={handleChange(valIndex)}\n      type=\"number\"\n      label={label}\n      variant=\"standard\"\n    />\n  );\n}\n\nexport function SimpleStringInput({\n  filterIndex,\n  valIndex,\n  onSetFilter,\n  value,\n  classes,\n  label,\n}: FilterBaseProps) {\n  const handleChange = (valIndex: number) => (\n    e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => {\n    if (!e.target.value) return;\n    onSetFilter(filterIndex, valIndex, e.target.value);\n  };\n  // if (value === undefined || value === null) return null;\n  return (\n    <TextField\n      classes={{ root: clsx(classes?.root, classes?.input) }}\n      key={`string-${valIndex}`}\n      value={value}\n      onChange={handleChange(valIndex)}\n      label={label}\n      variant=\"standard\"\n    />\n  );\n}\n\n// export function DateInput({\n//   filterIndex,\n//   valIndex,\n//   onSetFilter,\n//   value,\n//   classes,\n//   label,\n// }: FilterBaseProps) {\n  \n//   // if (value === undefined || value === null) return null;\n//   return (\n//     <\n"],"file":"FilterValues.js"}