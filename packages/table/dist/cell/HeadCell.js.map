{"version":3,"sources":["../../src/cell/HeadCell.tsx"],"names":["useHeadStyles","theme","columnContainer","display","top","left","position","zIndex","backgroundColor","alignItems","borderBottom","palette","grey","titleText","flex","fontFamily","dividerIcon","pointerEvents","width","RESIZE_HANDLE_WIDTH","height","dividerIconWrapper","cursor","opacity","HeadCell","minWidth","ROW_MIN_WIDTH","label","colKey","CellComponent","HeaderComponent","visible","sorted","sortable","resizable","colIndex","classes","sticky","DividerProps","rest","cellClasses","commonClasses","currentWidths","calcMinWidth","DATA_FIELD","tableCell","HESABA_TABLE_HEADER_CLASS","root","title","DRAG_CLASS","divider"],"mappings":"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","sourcesContent":["import { createStyles, makeStyles, Typography } from \"@material-ui/core\";\nimport React from \"react\";\n\nimport clsx from \"clsx\";\nimport {\n  DATA_FIELD,\n  DRAG_CLASS,\n  HESABA_TABLE_HEADER_CLASS,\n} from \"../utils/constants\";\nimport { RESIZE_HANDLE_WIDTH, ROW_MIN_WIDTH } from \"../utils/themeConstants\";\nimport HeaderMenu from \"../virtualize-table/header/HeaderMenu\";\nimport useCommonStyles from \"../styles/commonStyles\";\nimport { HeaderCellProps } from \"../types/tableElements\";\nimport DividerIcon from \"../assets/icons/common/DividerIcon\";\nimport { useTableSizeState } from \"../container/TableSizeProvider\";\n\nconst useHeadStyles = makeStyles((theme) =>\n  createStyles({\n    columnContainer: {\n      display: \"flex\",\n      top: 0,\n      left: 0,\n      position: \"sticky\",\n      zIndex: 2,\n      backgroundColor: \"rgba(255,255,255,0.8)\",\n      alignItems: \"center\",\n      borderBottom: `solid ${theme.palette.grey[300]} 1px`,\n    },\n    titleText: {\n      flex: 1,\n      fontFamily: \"inherit\",\n    },\n    dividerIcon: {\n      pointerEvents: \"none\",\n      display: \"inline-block\",\n      // width: 1.5,\n      // height: \"100%\",\n      // backgroundColor: \"#444\",\n      width: RESIZE_HANDLE_WIDTH,\n      height: RESIZE_HANDLE_WIDTH,\n    },\n    dividerIconWrapper: {\n      cursor: \"col-resize\",\n\n      opacity: 0.4,\n      \"&:hover\": {\n        opacity: 1,\n      },\n    },\n  })\n);\n\nconst HeadCell = ({\n  minWidth = ROW_MIN_WIDTH,\n  label,\n  colKey,\n  CellComponent,\n  HeaderComponent,\n  visible,\n  sorted,\n  sortable,\n  resizable,\n  colIndex,\n  // currentWidths,\n  classes,\n  sticky,\n  DividerProps,\n  ...rest\n}: HeaderCellProps) => {\n  const cellClasses = useHeadStyles();\n  const commonClasses = useCommonStyles();\n  const { currentWidths } = useTableSizeState();\n  // const setStickyColumn = useStoreActions((actions) => actions.setStickyColumn);\n  const calcMinWidth = currentWidths[rest[DATA_FIELD]]\n    ? currentWidths[rest[DATA_FIELD]]\n    : minWidth;\n\n  return (\n    <>\n      <div\n        className={clsx(\n          commonClasses.tableCell,\n          HESABA_TABLE_HEADER_CLASS,\n          classes?.root\n        )}\n        style={{\n          minWidth: calcMinWidth || minWidth,\n          width: calcMinWidth || minWidth,\n        }}\n        {...rest}\n      >\n        <>\n          <Typography\n            align=\"center\"\n            className={clsx(cellClasses.titleText, classes?.title)}\n          >\n            {label}\n          </Typography>\n          <HeaderMenu\n            index={colIndex}\n            sortable={sortable}\n            columnKey={colKey}\n            sorted={sorted}\n          />\n        </>\n      </div>\n\n      {resizable && (\n        <div className={clsx(DRAG_CLASS, cellClasses.dividerIconWrapper)}>\n          <DividerIcon\n            className={clsx(cellClasses.dividerIcon, classes?.divider)}\n            {...DividerProps}\n          />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default HeadCell;\n"],"file":"HeadCell.js"}