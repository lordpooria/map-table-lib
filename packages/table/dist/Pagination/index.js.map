{"version":3,"sources":["../../src/Pagination/index.tsx"],"names":["useStyles","theme","paginationRoot","display","width","border","flexWrap","borderTop","palette","grey","alignItems","justifyContent","actions","flexShrink","marginLeft","toolbar","minHeight","paddingRight","spacer","flex","caption","selectRoot","fontFamily","selectRootLTR","marginRight","selectRootRTL","select","paddingLeft","textAlign","textAlignLast","selectIcon","input","color","fontSize","menuItem","selectContainer","ActionsComponent","page","onPageChange","count","rowsPerPage","t","handleBackButtonClick","event","handleNextButtonClick","direction","prev","next","Math","ceil","defaultLabelDisplayedRows","from","to","of","moreThan","TablePagination","classes","rowsPerPageOptions","onRowsPerPageChange","height","rest","paginationClasses","numRowsSelected","state","getLabelDisplayedRowsTo","min","root","DEFAULT_PAGINATION_HEIGHT","rowPerPage","icon","map","rowsPerPageOption","rowSelected"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  createStyles,\n  InputBase,\n  makeStyles,\n  MenuItem,\n  Select,\n  TablePaginationProps,\n  Toolbar,\n} from \"@material-ui/core\";\n\nimport clsx from \"clsx\";\nimport {\n  WithFontTypography,\n  useTranslation,\n  ButtonTooltip,\n  useLanguageState,\n} from \"@hesaba/theme-language\";\nimport { TablePaginationActionsProps } from \"@material-ui/core/TablePagination/TablePaginationActions\";\n\nimport ArrowRightIcon from \"../assets/icons/common/ArrowRightIcon\";\nimport ArrowLeftIcon from \"../assets/icons/common/ArrowLeftIcon\";\nimport { useTStoreState } from \"../store/reducerHooks\";\nimport { DEFAULT_PAGINATION_HEIGHT } from \"../utils/themeConstants\";\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    paginationRoot: {\n      display: \"flex\",\n      width: \"100%\",\n      border: 0,\n      flexWrap: \"wrap\",\n      borderTop: `solid 1px ${theme.palette.grey[300]}`,\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n    },\n    actions: {\n      flexShrink: 0,\n      marginLeft: 20,\n    },\n    toolbar: {\n      minHeight: 52,\n      paddingRight: 2,\n    },\n    spacer: {\n      flex: \"1 1 100%\",\n    },\n    /* Styles applied to the caption Typography components if `variant=\"caption\"`. */\n    caption: {\n      flexShrink: 0,\n    },\n    selectRoot: {\n      fontFamily: \"inherit\",\n    },\n    selectRootLTR: {\n      marginRight: 32,\n      marginLeft: 8,\n    },\n    selectRootRTL: {\n      marginRight: 8,\n      marginLeft: 32,\n    },\n    /* Styles applied to the Select component `select` class. */\n    select: {\n      paddingLeft: 8,\n      paddingRight: 24,\n      textAlign: \"right\",\n      textAlignLast: \"right\", // Align <select> on Chrome.\n    },\n    // TODO v5: remove\n    /* Styles applied to the Select component `icon` class. */\n    selectIcon: {},\n    input: {\n      color: \"inherit\",\n      fontSize: \"inherit\",\n      flexShrink: 0,\n    },\n    menuItem: {},\n    selectContainer: { display: \"flex\" },\n  })\n);\n\nfunction ActionsComponent({\n  page,\n  onPageChange,\n  count,\n  rowsPerPage,\n}: TablePaginationActionsProps) {\n  const { t } = useTranslation();\n  // const handleFirstPageButtonClick = (event: any) => {\n  //   onPageChange(event, 0);\n  // };\n\n  const handleBackButtonClick = (event: any) => {\n    onPageChange(event, page - 1);\n  };\n\n  const handleNextButtonClick = (event: any) => {\n    onPageChange(event, page + 1);\n  };\n\n  // const handleLastPageButtonClick = (event: any) => {\n  //   onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  // };\n  return (\n    <div style={{ display: \"flex\", direction: \"ltr\" }}>\n      <ButtonTooltip\n        title={t?.prev}\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        color=\"inherit\"\n      >\n        <ArrowLeftIcon />\n      </ButtonTooltip>\n      <ButtonTooltip\n        title={t?.next}\n        onClick={handleNextButtonClick}\n        disabled={\n          count !== -1 ? page >= Math.ceil(count / rowsPerPage) - 1 : false\n        }\n        color=\"inherit\"\n      >\n        <ArrowRightIcon />\n      </ButtonTooltip>\n    </div>\n  );\n}\n\nfunction defaultLabelDisplayedRows({\n  from,\n  to,\n  count,\n}: {\n  from: number;\n  to: number;\n  count: number;\n}) {\n  const { t } = useTranslation();\n  return `${from}-${to} ${t?.of} ${\n    count !== -1 ? count : `${t?.moreThan}${to}`\n  }`;\n}\n\nexport type CommonTablePagination = TablePaginationProps & {\n  width: number | string;\n  classes?: { root?: string };\n};\n\nexport function TablePagination({\n  classes,\n  width,\n  rowsPerPageOptions = [10, 25, 50, 100],\n  page,\n  count,\n  rowsPerPage,\n  onRowsPerPageChange,\n  height,\n  ...rest\n}: CommonTablePagination) {\n  const paginationClasses = useStyles();\n  const { t } = useTranslation();\n  const { direction } = useLanguageState();\n  const numRowsSelected = useTStoreState((state) => state.numRowsSelected);\n\n  const getLabelDisplayedRowsTo = () => {\n    if (count === -1) return (page + 1) * rowsPerPage;\n    return rowsPerPage === -1\n      ? count\n      : Math.min(count, (page + 1) * rowsPerPage);\n  };\n\n  return (\n    <div\n      className={clsx(paginationClasses.paginationRoot, classes?.root)}\n      style={{ width, direction, height: height || DEFAULT_PAGINATION_HEIGHT }}\n    >\n      <Toolbar className={paginationClasses.toolbar}>\n        <div className={paginationClasses.spacer} />\n        <WithFontTypography\n          color=\"inherit\"\n          variant=\"body2\"\n          className={paginationClasses.caption}\n        >\n          {t?.rowPerPage}\n        </WithFontTypography>\n\n        <Select\n          classes={{\n            select: paginationClasses.select,\n\n            icon: paginationClasses.selectIcon,\n          }}\n          input={\n            <InputBase\n              className={clsx(\n                clsx(\n                  paginationClasses.input,\n                  paginationClasses.selectRoot,\n                  { [paginationClasses.selectRootLTR]: direction === \"ltr\" },\n                  { [paginationClasses.selectRootRTL]: direction !== \"ltr\" }\n                )\n              )}\n            />\n          }\n          value={rowsPerPage}\n          onChange={onRowsPerPageChange as any}\n        >\n          {rowsPerPageOptions.map((rowsPerPageOption) => (\n            <MenuItem\n              className={paginationClasses.menuItem}\n              key={rowsPerPageOption as any}\n              value={rowsPerPageOption as any}\n            >\n              {rowsPerPageOption}\n            </MenuItem>\n          ))}\n        </Select>\n\n        <WithFontTypography\n          color=\"inherit\"\n          variant=\"body2\"\n          className={paginationClasses.caption}\n        >\n          {defaultLabelDisplayedRows({\n            from: count === 0 ? 0 : page * rowsPerPage + 1,\n            to: getLabelDisplayedRowsTo(),\n            count: count === -1 ? -1 : count,\n          })}\n        </WithFontTypography>\n        <ActionsComponent {...(rest as any)} />\n      </Toolbar>\n\n      {numRowsSelected > 0 && (\n        <WithFontTypography>\n          {numRowsSelected} {t.rowSelected}\n        </WithFontTypography>\n      )}\n    </div>\n  );\n}\n"],"file":"index.js"}